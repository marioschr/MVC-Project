@using PagedList
@using PagedList.Mvc;
@model IEnumerable<MVC_Project.Models.authors>
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Authors";
}

<h2>Authors</h2>
<p>
    <a class="btn btn-primary" href=@Url.Action("Create") role="button">Add new Author</a>
</p>

<table class="table table-hover">
    <thead class="thead-dark">
        <tr>
            <th>
                <a href=@Url.Action("Index", new {sortOrder = ViewBag.au_lnameSortParm, currentFilter = ViewBag.CurrentFilter}) class="text-white" role="button">
                    @Html.DisplayNameFor(model => model.au_lname)
                </a>
            </th>
            <th>
                <a href=@Url.Action("Index", new {sortOrder = ViewBag.au_fnameSortParm, currentFilter = ViewBag.CurrentFilter}) class="text-white" role="button">
                    @Html.DisplayNameFor(model => model.au_fname)
                </a>
            </th>
            <th>
                <a href=@Url.Action("Index", new {sortOrder = ViewBag.phoneSortParm, currentFilter = ViewBag.CurrentFilter}) class="text-white" role="button">
                    @Html.DisplayNameFor(model => model.phone)
                </a>
            </th>
            <th>
                <a href=@Url.Action("Index", new {sortOrder = ViewBag.addressSortParm, currentFilter = ViewBag.CurrentFilter}) class="text-white" role="button">
                    @Html.DisplayNameFor(model => model.address)
                </a>
            </th>
            <th>
                <a href=@Url.Action("Index", new {sortOrder = ViewBag.citySortParm, currentFilter = ViewBag.CurrentFilter}) class="text-white" role="button">
                    @Html.DisplayNameFor(model => model.city)
                </a>
            </th>
            <th>
                <a href=@Url.Action("Index", new {sortOrder = ViewBag.stateSortParm, currentFilter = ViewBag.CurrentFilter}) class="text-white" role="button">
                    @Html.DisplayNameFor(model => model.state)
                </a>
            </th>
            <th>
                <a href=@Url.Action("Index", new {sortOrder = ViewBag.zipSortParm, currentFilter = ViewBag.CurrentFilter}) class="text-white" role="button">
                    @Html.DisplayNameFor(model => model.zip)
                </a>
            </th>
            <th>
                <a href=@Url.Action("Index", new {sortOrder = ViewBag.contractSortParm, currentFilter = ViewBag.CurrentFilter}) class="text-white" role="button">
                    @Html.DisplayNameFor(model => model.contract)
                </a>
            </th>
            <th></th>
        </tr>
    </thead>

    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.au_lname)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.au_fname)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.phone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.city)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.state)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.zip)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.contract)
            </td>
            <td>
                <div class="btn-group" role="group" aria-label="Basic example">
                    <a class="btn btn-primary" href=@Url.Action("Edit", new {id = item.au_id}) role="button">Edit</a>
                    <a class="btn btn-primary" href=@Url.Action("Details", new {id = item.au_id}) role="button">Details</a>
                    <a class="btn btn-primary" href=@Url.Action("Delete", new {id = item.au_id}) role="button">Delete</a>
                </div>
            </td>
        </tr>
    }

</table>
<br />
<div style="text-align: center">
    @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index",
        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
</div>
